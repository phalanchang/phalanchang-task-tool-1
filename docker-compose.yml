version: '3.8'

services:
  # MySQL Database Service
  database:
    build: ./database
    container_name: task-app-database
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpass}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-task_management_app}
      MYSQL_USER: ${MYSQL_USER:-app_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-app_password}
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./database/my.cnf:/etc/mysql/conf.d/custom.cnf:ro
    networks:
      - task-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Node.js Backend API Service
  backend:
    build: ./backend
    container_name: task-app-backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: ${PORT:-3001}
      DB_HOST: database
      DB_PORT: ${DB_PORT:-3306}
      DB_USER: ${DB_USER:-root}
      DB_PASSWORD: ${DB_PASSWORD:-rootpass}
      DB_NAME: ${DB_NAME:-task_management_app}
      JWT_SECRET: ${JWT_SECRET:-dev-jwt-secret-key}
      SESSION_SECRET: ${SESSION_SECRET:-dev-session-secret}
      LOG_LEVEL: ${LOG_LEVEL:-debug}
    ports:
      - "3001:3001"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - task-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    volumes:
      # Mount .env for development (optional)
      - ./.env:/app/.env:ro

  # React Frontend Service
  frontend:
    build: ./frontend
    container_name: task-app-frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_BASE_URL: ${REACT_APP_API_BASE_URL:-http://localhost:3001/api}
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - task-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

# Named volumes for data persistence
volumes:
  mysql-data:
    driver: local

# Custom network for service communication
networks:
  task-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16